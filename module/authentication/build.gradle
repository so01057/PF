plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5' // Spring Boot 플러그인 적용
}

group = 'com.zemnnni'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation platform(project(":module:dependency-management"))
    implementation project(':module:common')
    implementation project(':module:user')

    
    /* SpringBoot */
    implementation "org.springframework.boot:spring-boot-starter-web"

    /* Log4j2 */
    implementation "org.springframework.boot:spring-boot-starter-log4j2"

    /* slf4j */
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl'

    /* Test Program */
    implementation "org.springframework.boot:spring-boot-starter-test"
    implementation "org.junit.jupiter:junit-jupiter-api"

    /* SpringDoc(Swagger) */
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui"

    /* Lombok */
    implementation "org.projectlombok:lombok"
    implementation "org.projectlombok:lombok"

    /* Database */
    implementation "org.postgresql:postgresql"

    /* JPA */
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    /* JDBC */
    implementation "org.springframework.boot:spring-boot-starter-jdbc"

    /* mybatis */
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter"

    /* Spring Security */
    implementation "org.springframework.boot:spring-boot-starter-security"

    /* Redis */
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.session:spring-session-data-redis"

    /* JWT */
    implementation "io.jsonwebtoken:jjwt-api"
    implementation "io.jsonwebtoken:jjwt-impl"
    implementation "io.jsonwebtoken:jjwt-jackson"

    /* Oauth2 */
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
}

test {
    useJUnitPlatform()
}